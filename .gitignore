# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
/.pypirc
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/


# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# Environments
.env
.venv
.venvdocs
.venv_nf2
.venv_nfpl
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Visual Studio Code project settings
.vscode

# PyCharm project settings
.idea

# Visual Studio Code workspaces (rbd)
.code-workspace

# mypy
.mypy_cache/
.dmypy.json
dmypy.json
/.vs/AlpycaClient/v16/.suo
/PackageTesting/tenv/Scripts
/PackageTesting/tenv/pyvenv.cfg
/PackageTesting
/.vs
/OmniSimSettings.lnk
/TestResults
/devtest.py
/3-color-sample.fits
/docs/References
ipv6get.py
HostHdrTest.py
Alpyca.code-workspace
disctest.py
piplist.txt
ConfigReadTest.py
QuickTest.py
(sample) AscomDriver.cs
docsample.py
disc2test.py
